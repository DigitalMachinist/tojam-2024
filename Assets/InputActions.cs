//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""8a50441c-0657-4d90-9ca0-9cf6fa6ae9e6"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""de2a03f1-8e42-4052-9814-f8e83e4362cd"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Card North"",
                    ""type"": ""Button"",
                    ""id"": ""5c2f0359-d529-4220-b9ca-50654d5f6424"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card North Inverted"",
                    ""type"": ""Button"",
                    ""id"": ""f0a7f1ff-ff81-4c0a-ab2d-e2a31e912a9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card South"",
                    ""type"": ""Button"",
                    ""id"": ""275a562f-9445-414f-8577-34c513686ce7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card South Inverted"",
                    ""type"": ""Button"",
                    ""id"": ""a071f291-693f-46f0-8588-6f080a710ceb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card West"",
                    ""type"": ""Button"",
                    ""id"": ""a5b7434d-c009-46b4-9036-f74e643c0db5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card West Inverted"",
                    ""type"": ""Button"",
                    ""id"": ""dbab434a-4461-498d-8dab-7f1f054f19a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card East"",
                    ""type"": ""Button"",
                    ""id"": ""bdcef194-8524-47d8-8cc5-37f6eb28d0f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card East Inverted"",
                    ""type"": ""Button"",
                    ""id"": ""bd731a9b-4654-45d9-8f89-1b48f2494e0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""589f6767-034f-49ae-ab61-0287fc76f338"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""90f688c8-69f5-4f3a-9d03-0e0b5c885db8"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cac4e2da-fbcf-4209-9ff7-0dd09e09abfd"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""056b1459-ef15-4359-87dd-6d0787eae905"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f70cf115-3c1a-4030-88da-0cb3bd537a77"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b834a808-ae07-40c5-988d-d21891309e59"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""68746850-6843-4e5c-bcdd-01e1cb047729"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card North Inverted"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""1ac2e2ad-f653-432e-92de-07803cc6c895"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card North Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""d278adeb-bb2d-440c-997b-17169b067108"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card North Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""62871ff8-bc3b-4a85-ba6e-2f325c997937"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card South Inverted"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""8ec1103b-88bd-4406-931b-e9b15a634025"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card South Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""c90735a5-c435-4de9-b776-0f4727055240"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card South Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""a3c328f4-5c75-453b-8a5f-19ca0e5fa810"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card West Inverted"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""ef933ee7-6df4-454d-ba2c-b62951fa5dfd"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card West Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""615790f8-2bd9-46b8-8cda-ea5aa671a6f1"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card West Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""69414c21-858c-45cb-83d2-8f773f6aa1c8"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card East Inverted"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""ffe3f051-1cdb-478a-acbb-279104ccb908"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card East Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8c6e4062-65be-4221-b8b8-475b21279a82"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Card East Inverted"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""aab85c2a-19da-42c1-bd74-3b15c3f9c328"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9abaaa19-94d9-4d8d-8012-80d3038bfaec"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""4b422dfe-06a4-4385-b600-78fe81f07bac"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""5ec92acf-ecf7-4135-8e58-a3c36a2af4c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5f1ebf53-495d-4e77-b0f8-6627daf86734"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_CardNorth = m_Gameplay.FindAction("Card North", throwIfNotFound: true);
        m_Gameplay_CardNorthInverted = m_Gameplay.FindAction("Card North Inverted", throwIfNotFound: true);
        m_Gameplay_CardSouth = m_Gameplay.FindAction("Card South", throwIfNotFound: true);
        m_Gameplay_CardSouthInverted = m_Gameplay.FindAction("Card South Inverted", throwIfNotFound: true);
        m_Gameplay_CardWest = m_Gameplay.FindAction("Card West", throwIfNotFound: true);
        m_Gameplay_CardWestInverted = m_Gameplay.FindAction("Card West Inverted", throwIfNotFound: true);
        m_Gameplay_CardEast = m_Gameplay.FindAction("Card East", throwIfNotFound: true);
        m_Gameplay_CardEastInverted = m_Gameplay.FindAction("Card East Inverted", throwIfNotFound: true);
        m_Gameplay_Pause = m_Gameplay.FindAction("Pause", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Newaction = m_Menu.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_CardNorth;
    private readonly InputAction m_Gameplay_CardNorthInverted;
    private readonly InputAction m_Gameplay_CardSouth;
    private readonly InputAction m_Gameplay_CardSouthInverted;
    private readonly InputAction m_Gameplay_CardWest;
    private readonly InputAction m_Gameplay_CardWestInverted;
    private readonly InputAction m_Gameplay_CardEast;
    private readonly InputAction m_Gameplay_CardEastInverted;
    private readonly InputAction m_Gameplay_Pause;
    public struct GameplayActions
    {
        private @InputActions m_Wrapper;
        public GameplayActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @CardNorth => m_Wrapper.m_Gameplay_CardNorth;
        public InputAction @CardNorthInverted => m_Wrapper.m_Gameplay_CardNorthInverted;
        public InputAction @CardSouth => m_Wrapper.m_Gameplay_CardSouth;
        public InputAction @CardSouthInverted => m_Wrapper.m_Gameplay_CardSouthInverted;
        public InputAction @CardWest => m_Wrapper.m_Gameplay_CardWest;
        public InputAction @CardWestInverted => m_Wrapper.m_Gameplay_CardWestInverted;
        public InputAction @CardEast => m_Wrapper.m_Gameplay_CardEast;
        public InputAction @CardEastInverted => m_Wrapper.m_Gameplay_CardEastInverted;
        public InputAction @Pause => m_Wrapper.m_Gameplay_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @CardNorth.started += instance.OnCardNorth;
            @CardNorth.performed += instance.OnCardNorth;
            @CardNorth.canceled += instance.OnCardNorth;
            @CardNorthInverted.started += instance.OnCardNorthInverted;
            @CardNorthInverted.performed += instance.OnCardNorthInverted;
            @CardNorthInverted.canceled += instance.OnCardNorthInverted;
            @CardSouth.started += instance.OnCardSouth;
            @CardSouth.performed += instance.OnCardSouth;
            @CardSouth.canceled += instance.OnCardSouth;
            @CardSouthInverted.started += instance.OnCardSouthInverted;
            @CardSouthInverted.performed += instance.OnCardSouthInverted;
            @CardSouthInverted.canceled += instance.OnCardSouthInverted;
            @CardWest.started += instance.OnCardWest;
            @CardWest.performed += instance.OnCardWest;
            @CardWest.canceled += instance.OnCardWest;
            @CardWestInverted.started += instance.OnCardWestInverted;
            @CardWestInverted.performed += instance.OnCardWestInverted;
            @CardWestInverted.canceled += instance.OnCardWestInverted;
            @CardEast.started += instance.OnCardEast;
            @CardEast.performed += instance.OnCardEast;
            @CardEast.canceled += instance.OnCardEast;
            @CardEastInverted.started += instance.OnCardEastInverted;
            @CardEastInverted.performed += instance.OnCardEastInverted;
            @CardEastInverted.canceled += instance.OnCardEastInverted;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @CardNorth.started -= instance.OnCardNorth;
            @CardNorth.performed -= instance.OnCardNorth;
            @CardNorth.canceled -= instance.OnCardNorth;
            @CardNorthInverted.started -= instance.OnCardNorthInverted;
            @CardNorthInverted.performed -= instance.OnCardNorthInverted;
            @CardNorthInverted.canceled -= instance.OnCardNorthInverted;
            @CardSouth.started -= instance.OnCardSouth;
            @CardSouth.performed -= instance.OnCardSouth;
            @CardSouth.canceled -= instance.OnCardSouth;
            @CardSouthInverted.started -= instance.OnCardSouthInverted;
            @CardSouthInverted.performed -= instance.OnCardSouthInverted;
            @CardSouthInverted.canceled -= instance.OnCardSouthInverted;
            @CardWest.started -= instance.OnCardWest;
            @CardWest.performed -= instance.OnCardWest;
            @CardWest.canceled -= instance.OnCardWest;
            @CardWestInverted.started -= instance.OnCardWestInverted;
            @CardWestInverted.performed -= instance.OnCardWestInverted;
            @CardWestInverted.canceled -= instance.OnCardWestInverted;
            @CardEast.started -= instance.OnCardEast;
            @CardEast.performed -= instance.OnCardEast;
            @CardEast.canceled -= instance.OnCardEast;
            @CardEastInverted.started -= instance.OnCardEastInverted;
            @CardEastInverted.performed -= instance.OnCardEastInverted;
            @CardEastInverted.canceled -= instance.OnCardEastInverted;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_Newaction;
    public struct MenuActions
    {
        private @InputActions m_Wrapper;
        public MenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Menu_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnCardNorth(InputAction.CallbackContext context);
        void OnCardNorthInverted(InputAction.CallbackContext context);
        void OnCardSouth(InputAction.CallbackContext context);
        void OnCardSouthInverted(InputAction.CallbackContext context);
        void OnCardWest(InputAction.CallbackContext context);
        void OnCardWestInverted(InputAction.CallbackContext context);
        void OnCardEast(InputAction.CallbackContext context);
        void OnCardEastInverted(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
